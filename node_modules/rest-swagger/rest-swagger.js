const swaggerUi = require('swagger-ui-express');
const YAML = require('yamljs');
const { SwaggerJson, Definition } = require('./libs');
const options = {
    // customCss: '.swagger-ui .topbar { display: none }'
};
const ExtensionManager = require('rest-extensions');
const MyPath = require('./libs/path');
class SwaggerClient {
    
    static get serve() {
        return swaggerUi.serve
    }

    static setup() {
        const exts = new ExtensionManager().getExtensions();;
        const modules = exts.map(item => item.modules);
        const flatten = (list) => list.reduce((a, b) => a.concat(Array.isArray(b) ? flatten(b) : b), []);
        
        const extsApi = flatten(modules);
        
        


        const definitions = YAML.load('meta.yml').definitions;
        const resources = definitions.map(item => Object.keys(item)[0])
        const instance = new SwaggerJson();
        instance.addDesc("Đây là server API DEMO.")
            .addVersion("1.0.0")
            .addTitle("Sample API")
            .addContact({ 'email': 'hoangnm@ows.vn', 'phone': '0918264721' })
            .addHost('localhost:8080')
            .addBasePath('/api');
        // add tag
        resources.forEach(item => instance.addTag({ 'name': item, 'description': `Truy xuất bảng ${item}` }) );
        instance.addTag({ 'name': 'extension', 'description': `Tổng hợp các api mở rộng` })

        // add paths
        extsApi.forEach(item => {
            const path = new MyPath(item.method.toLowerCase())
                .addTag('extension')
                .addSummary(item.summary)
                .addOperation(item.name)
                .addConsume('application/json')
                .addProduce('application/json')
                .addResponse('200', { 'description': 'ok' });
            
            instance.addPath('/ext'+item.path, path.getJson());
        })

        resources.forEach(element => {
            const api = definitions.filter(item => {
                if (item[element]) {
                    return item;
                }
            })[0][element].api;
            const properties = definitions.filter(item => {
                if (item[element]) {
                    return item;
                }
            })[0][element].properties;
            instance.addApi(element, api, properties);
        });

        // add definition
        definitions.forEach(item => {
            const key = Object.keys(item)[0];
            const properties = item[key].properties;
            const obj = new Definition();
            obj.setType('object')
            properties.forEach(item => obj.addProperty(item.name, {'type': item.type}))
            instance.addDefinition(Object.keys(item)[0], obj.getJson())
        })
        // const fs = require('fs');
        // fs.writeFileSync('/Users/pc/Desktop/demo.json', JSON.stringify(instance.getJson()));
        return swaggerUi.setup(instance.getJson(), options);
    }
}
module.exports = SwaggerClient;