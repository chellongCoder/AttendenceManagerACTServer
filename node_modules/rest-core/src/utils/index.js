const config = require('rest-config').instance;
class Utils {
    static resourceIsExist(resource) {
        const resources = config.metadata('definitions');
        return resources
                .map( item => Object.keys(item)[0])
                .filter( item => item == resource )
                .length > 0;
    }
    static getResourceConfig(resource) {
        const resources = config.metadata('definitions');
        if (Utils.resourceIsExist(resource)) {
            return resources.filter(item => Object.keys(item)[0] == resource)
                        .map(item => item[resource])[0]
        }
        return null;
    }
    static isAvaiable(resource, method) {
        const resourceConfig = Utils.getResourceConfig(resource);
        if ( resourceConfig != null) {
            console.log('config ',typeof resourceConfig.api);
            if (resourceConfig.api == 'all') return true;
            return resourceConfig.api.indexOf(method) >= 0
        }
        return false;
    }
    static flatten(list) {
        return list.reduce(
            (a, b) => a.concat(Array.isArray(b) ? Utils.flatten(b) : b), []
        );
    }
}
module.exports = Utils